Vagrant.configure("2") do |config|
  config.vm.provider :virtualbox # Defining the provider. The box used in this Vagrantfile only works with Virtualbox.
  config.ssh.keys_only = true # Allow ssh only with keys
  config.vm.define "host" do |host| # Defining the VM
    host.vm.box = "guguidfr/debian11-project" # Box image
    host.vm.hostname = "dockers-server" # Host name. You are free to change it
    # -----------------------------------------------------------------------------------------
    # This folder is where you put your app code
    host.vm.synced_folder "./app", "/home/vagrant/app"
    # -----------------------------------------------------------------------------------------
    # Uncomment these lines if you want to provide your own ssh keys for SCP or remote access.
    # For remote SSH access to this machine, the command will be: "ssh [host-ip]@vagrant -p 2222"
    # host.vm.provision "file", source: "./ssh_access/user_ssh_access.pub", destination: "/home/vagrant/ssh_access/user_key"
    # host.vm.provision "file", source: "./ssh_access/root_ssh_access.pub", destination: "/home/vagrant/ssh_access/root_key"
    # -----------------------------------------------------------------------------------------
    host.vm.network "forwarded_port", guest: 3000, host: 3000 # API Port: for external testing with Insomnia
    host.vm.network "forwarded_port", guest: 8978, host: 8978 # DBeaver Port: MySQL and PostgreSQL web client
    host.vm.network "forwarded_port", guest: 8081, host: 8081 # Mongo-Express Port: MongoDB web client
    # -----------------------------------------------------------------------------------------
    # Uncomment the line of the desired database server port if you need it.
    # host.vm.network "forwarded_port", guest: 3306, host: 3306 # MySQL Port
    # host.vm.network "forwarded_port", guest: 5432, host: 5432 # PostgreSQL Port
    # host.vm.network "forwarded_port", guest: 27017, host: 27017 # MongoDB Port
    # -----------------------------------------------------------------------------------------
    host.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--ioapic", "on"] # Enables IOAPIC for better performance
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"] # Using NAT adapter for Domain Name Resolution
      v.customize ["modifyvm", :id, "--name", "dockers-server"] # Stablish the VM name
      v.customize ["modifyvm", :id, "--memory", 6144] # Define the amout of RAM (in MB)
      v.customize ["modifyvm", :id, "--cpus", 6] # Define the amout of CPU cores
    end
    host.vm.provision "shell", inline: "apt update && apt upgrade -y"
    # Uncomment this line if you are using your own ssh kys
    # host.vm.provision "shell", path: "./boot/copy-ssh-keys.sh"
    host.vm.provision "shell", path: "./boot/get-docker.sh"
    host.vm.provision "shell", path: "./boot/get-compose.sh", privileged: false
    host.vm.provision "shell", path: "./boot/download-images.sh", privileged: false
  end
end
