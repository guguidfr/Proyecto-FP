version: '3.1'

services:
  nginx:
    image: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - /docker_volumes/ngnix/conf/:/etc/ngnix
      - /docker_volumes/ngnix/server:/usr/share/nginx/html
    networks:
      my-network:
        ipv4_address: 172.16.238.10

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - /docker_volumes/postgresql/date:/var/lib/postgresql/data
      - /templates/postgresql.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      my-network:
        ipv4_address: 172.16.238.20

  mongo:
    image: mongo:4.4
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: toor
    ports:
      - "27017:27017"
    volumes:
      - /docker_volumes/mongo/data:/data/db
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - /templates/mongodb.json:/data.json
    command: mongod --bind_ip_all --port 27017 --dbpath /data/db --quiet --journal
    networks:
      my-network:
        ipv4_address: 172.16.238.30

  exporter:
    image: percona/mongodb_exporter:2.37.0
    restart: always
    environment:
      MONGODB_URI: mongodb://exporter:exporter-password@172.16.238.30:27017
    ports:
    - "9216:9216"
    networks:
      my-network:
        ipv4_address: 172.16.238.40
    depends_on:
      - mongo

  prometheus:
    image: bitnami/prometheus
    user: root
    restart: always
    volumes:
      - /docker_volumes/prometheus/main:/etc/prometheus
      - /docker_volumes/prometheus/prometheus-data:/prometheus
      # - /docker_volumes/prometheus/queries.active:/prometheus/queries.active
    command:
      # --config.file=/etc/prometheus/prometheus.yml
      --config.file=/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
    ports:
      - "9090:9090"
    networks:
      my-network:
        ipv4_address: 172.16.238.50
    depends_on:
      - mongo

  grafana:
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      my-network:
        ipv4_address: 172.16.238.60

volumes:
  prometheus-data:
networks:
  my-network:
    ipam:
      config:
        - subnet: 172.16.238.0/24
